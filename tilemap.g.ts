// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`64001000080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808081111110f0f0f0f0e000000000000000c0f0f0f0f0f0f0f0f0e000000000000000000000000000000110f0f0f0f0f0f0f0f0f0f0f0f0f0f0e000000000000000c0f0f0f101010101010100f0f0f0e000000000000000000060606060606060606060606060f0f0e00000000000000000000000000000000000c0e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0f0f0f0f0f0e00000000000000000000000000000000000000000000060606060d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000202000000000000000000000000000b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000202020200000000020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0000000000000000020000000000000000000000000000000002020200000102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000202020200000000000000000000000000000000000000000000000000000000000000000000070202000000000000000000000000000000000000000000000000000000000002020200000000000b000000000000000000000000000000000b0202020000000000000000000000000000000000000000000000000b00000000000000000000000000000000020200000000000000000000000001010101000000000000000000000000000000000001010101010000000000000000000000000009090900000000000000000000000000020202020000000000000000000202020200000000000000000000000000000002020200000000000b00000000000000000001010000000b000000000000000000000000000000000000000b000a0000000b0000000000000000000000000002020200000000000000000000020200000000000000000000020202000000000000000000000200000000010101010000000000000000000000000202020000000000000000000000000000000101010101010109090909000000000000000000000000000000000000000000000000020200000000000000000000000000020202000000000000000000000000000000000000000000000000000002020202020202000b`, img`
2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222.......2222222222...............2222222222222222.......222222222222222.........2222222222222
222.................22.............................................2222222......................2222
2..................................................................................................2
...............................22...................................................................
............................2222....22222...........................................................
...........................2................222..22.................................................
............2222..................................222.............................222...............
........222.........................................22............2222.................22222........
.....222.............2222.........2222...............222...............22...........................
................222..........22..........222..........2....2222............222...............2222222
2222........................22.............222..........................2222222...............222222
...........22.....................22222................................2222222222...............2222
........222222.......................................................22222222222.................222
.......22222222.....................................................2222222222222..................2
2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,sprites.builtin.oceanDepths0,sprites.builtin.oceanDepths5,sprites.builtin.coral0,sprites.builtin.coral5,sprites.builtin.coral1,sprites.builtin.oceanDepths9,sprites.builtin.oceanDepths1,sprites.builtin.oceanSand8,sprites.builtin.oceanDepths4,sprites.dungeon.collectibleBlueCrystal,myTiles.tile2,sprites.builtin.oceanSand13,sprites.builtin.oceanSand12,sprites.builtin.oceanSand15,sprites.builtin.oceanSand14,sprites.builtin.oceanSand9,sprites.builtin.oceanSand11], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
